@model PaginatedList<Event>


<h6 style="color: red;">@TempData["ViewMessage"]</h6>
@using (Html.BeginForm("CreateNewEvent", "Event"))
{
    <div class="d-flex">
        <h3>Create new event</h3>
        <div class="me-2">
            <select class="form-select" aria-label="Default select example" id="EventType" name="EventType">
                @* <option>Create new Event</option> *@
                <option value="Wedding">Wedding</option>
                <option value="Baptism">Baptism</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Create new event</button>
    </div>
}

@using (Html.BeginForm("Index", "Event"))
{
    <div class="d-flex">
        <h3>Filters : </h3>
        <select class="form-select me-2" aria-label="Default select example" id="eventFilter" name="eventFilter">
            <option value="">Filter By</option>
            <option value="">All Events</option>
            <option value="Wedding">Wedding</option>
            <option value="Baptism">Baptism</option>
        </select>
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>
}
<br />

@if (ViewData["eventFilterResult"] is null)
{
    <h1>All Events</h1>
}
else
{
    <h1>@ViewData["eventFilterResult"]</h1>
}

<table class="table">
    <thead>
        <tr>
            <th>
                Event Name
            </th>
            <th>
                Event Type
            </th>
            <th>
                Event Date
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EventName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventDate)
                </td>
                <td>
                    <a asp-controller="Guest" asp-action="Index" asp-route-id="@item.Id">GUEST LIST</a>
                </td>
                <td>
                    
                    <a asp-action="EditEvent" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="DetailsEvent" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="DeleteEvent" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)" ,
   asp-route-eventFilter="@ViewData["eventFilterResult"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)" ,
   asp-route-eventFilter="@ViewData["eventFilterResult"]"
   class="btn btn-default @nextDisabled">
    Next
</a>